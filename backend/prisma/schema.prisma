// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Owner {
  owner_id    String    @id @default(uuid())
  org_name    String
  email       String    @unique
  password    String    @default("")
  description String?
  contact_info String?
  logo        String?
  create_at   DateTime  @default(now())
  update_at   DateTime  @default(now())
  
  // Relations
  features    Feature[]
  plans       Plan[]
  
  @@map("owners")
}

model Feature {
  feature_id  String    @id @default(uuid())
  name        String
  description String
  owner_id    String
  create_at   DateTime  @default(now())
  update_at   DateTime  @default(now())
  delete_at   DateTime?
  
  // Relations
  owner         Owner         @relation(fields: [owner_id], references: [owner_id], onDelete: Cascade)
  plan_features PlanFeature[]
  
  @@map("features")
}

model Plan {
  plan_id     String    @id @default(uuid())
  name        String
  description String
  price       Decimal   @db.Decimal(10, 2)
  duration    Int       // in days
  owner_id    String
  create_at   DateTime  @default(now())
  update_at   DateTime  @default(now())
  delete_at   DateTime?
  
  // Relations
  owner         Owner         @relation(fields: [owner_id], references: [owner_id], onDelete: Cascade)
  plan_features PlanFeature[]
  
  @@map("plans")
}

model PlanFeature {
  plan_feature_id String @id @default(uuid())
  plan_id         String
  feature_id      String
  create_at       DateTime @default(now())
  
  // Relations
  plan    Plan    @relation(fields: [plan_id], references: [plan_id], onDelete: Cascade)
  feature Feature @relation(fields: [feature_id], references: [feature_id], onDelete: Cascade)
  
  @@unique([plan_id, feature_id])
  @@map("plan_features")
}